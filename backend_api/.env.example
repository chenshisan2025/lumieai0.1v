# =============================================================================
# LumieAI Backend Environment Configuration
# =============================================================================
# Copy this file to .env and update the values according to your environment

# =============================================================================
# Database Configuration
# =============================================================================
# SQLite database file path for local development
DATABASE_URL=sqlite:///./test_lumieai.db

# =============================================================================
# Redis Configuration
# =============================================================================
# Redis server URL for caching and session storage
REDIS_URL=redis://localhost:6379/0

# =============================================================================
# Celery Configuration (Background Tasks)
# =============================================================================
# Redis broker for Celery task queue
CELERY_BROKER_URL=redis://localhost:6379/1
# Redis backend for storing Celery task results
CELERY_RESULT_BACKEND=redis://localhost:6379/2
# Celery beat schedule file location
CELERY_BEAT_SCHEDULE_FILE=/tmp/celerybeat-schedule
# Timezone for Celery tasks
CELERY_TIMEZONE=UTC

# =============================================================================
# Blockchain Configuration
# =============================================================================
# Ethereum mainnet RPC URL (for production)
ETH_RPC_URL=https://mainnet.infura.io/v3/your-project-id

# BSC (Binance Smart Chain) RPC URL for subscription payments
# Use testnet for development: https://data-seed-prebsc-1-s1.binance.org:8545
# Use mainnet for production: https://bsc-dataseed.binance.org/
BSC_RPC_URL=https://bsc-dataseed1.binance.org/
BSC_TESTNET_RPC_URL=https://data-seed-prebsc-1-s1.binance.org:8545/

# BSC Chain IDs
BSC_CHAIN_ID=56
BSC_TESTNET_CHAIN_ID=97

# BSC API key for enhanced RPC access (optional but recommended)
# Get from: https://bscscan.com/apis
BSC_API_KEY=your-bscscan-api-key-here

# Private key for blockchain operations (KEEP SECURE!)
# For production, use a dedicated service account with minimal permissions
PRIVATE_KEY=your-private-key-here

# Smart contract addresses on BSC network
# Data proof contract for storing health data proofs
DATA_PROOF_CONTRACT_ADDRESS=0x1234567890123456789012345678901234567890

# Reward distributor contract for LUM token rewards
REWARD_DISTRIBUTOR_CONTRACT_ADDRESS=0x0987654321098765432109876543210987654321

# LUM Token contract address for marketplace payments
LUM_TOKEN_ADDRESS=0x6445C5d74c57a6fe0E622B1380c65C0F112B3C5A

# Subscription manager contract for handling premium subscriptions
# This address must match the deployed SubscriptionManager contract
SUBSCRIPTION_MANAGER_ADDRESS=0xF87A47426Fc5718456d69a347320f5aebF250Ea9

# =============================================================================
# Subscription Plans Configuration
# =============================================================================
# Default subscription plan ID (usually 1 for basic plan)
DEFAULT_PLAN_ID=1

# Default plan price in Wei (18 decimal places)
# Example: 10000000000000000 = 0.01 BNB
DEFAULT_PLAN_PRICE_WEI=10000000000000000

# Default subscription period in days
DEFAULT_PLAN_PERIOD_DAYS=30

# =============================================================================
# IPFS Configuration
# =============================================================================
# IPFS node API URL for storing encrypted health data
IPFS_API_URL=http://localhost:5001

# IPFS gateway URL for retrieving stored data
IPFS_GATEWAY_URL=http://localhost:8080

# =============================================================================
# API Server Configuration
# =============================================================================
# Allowed hosts for CORS (use * for development, specific domains for production)
ALLOWED_HOSTS=*

# Enable debug mode (set to false in production)
DEBUG=true

# Secret key for API security (generate a strong random key for production)
SECRET_KEY=your-secret-key-here

# =============================================================================
# JWT Authentication Configuration
# =============================================================================
# Secret key for JWT token signing (use a strong random key)
JWT_SECRET_KEY=your-jwt-secret-key

# JWT signing algorithm
JWT_ALGORITHM=HS256

# JWT token expiration time in hours
JWT_EXPIRATION_HOURS=24

# =============================================================================
# Data Encryption Configuration
# =============================================================================
# AES encryption key for IPFS data (32 bytes, base64 encoded)
# Generate with: openssl rand -base64 32
AES_ENCRYPTION_KEY=your-base64-encoded-32-byte-key

# KMS (Key Management Service) configuration
# AWS KMS key ID for managing encryption keys
KMS_KEY_ID=your-kms-key-id

# AWS region for KMS service
AWS_REGION=us-east-1

# AWS credentials for KMS access
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key

# =============================================================================
# Logging Configuration
# =============================================================================
# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log format: json or text
LOG_FORMAT=json

# =============================================================================
# Privacy and Compliance
# =============================================================================
# Enable privacy mode to prevent logging of sensitive health data
PRIVACY_MODE=true

# Data retention period in days (for GDPR compliance)
DATA_RETENTION_DAYS=365

# Enable audit logging for compliance
AUDIT_LOGGING=true